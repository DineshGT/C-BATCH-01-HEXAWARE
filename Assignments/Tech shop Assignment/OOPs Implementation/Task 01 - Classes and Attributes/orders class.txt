public class Orders_class
{
    //Attributes
    public int order_id { get; private set; }
    private Customer_class _customer { get; set; };
    public DateTime order_date { get; set; }
    public double total_amount { get; set; }
    public string order_status { get; set; }

    //parameterized constructor
    public Orders_class(int order_id, Customer_class _customer, DateTime order_date, double total_amount)
    {
        this.order_id = order_id;
        this._customer = _customer;
        this.order_date = order_date;
        this.total_amount = total_amount;
        this.order_status = "Pending"; // it is default here
    }

    // Methods

    // To get total amount of orders
    public double CalculateTotalAmount(List<OrderDetails_class> order_details)
    {
        //TotalAmount = ()
        return TotalAmount;
    }

    // To get details or orders
    public void GetOrderDetails()
    {
        Console.WriteLine("-------------Order Details--------------");
        Console.WriteLine($"Order ID: {order_id}");
        Console.WriteLine($"Order Date: {order_date}");
        Console.WriteLine($"Total Amount: {total_amount}");
        Console.WriteLine($"Order Status: {order_status}");
        Console.WriteLine("-----------------------------------------");

    }

    //To update order status
    public void UpdateOrderStatus(DateTime ? order_date = null, double ? total_amount = null, string ? order_status = null)
    {
        if (order_date != null) this.order_date = order_date.Value;
        if (total_amount != null) this.total_amount = total_amount.Value;
        if (!string.IsNullOrEmpty(order_status)) this.order_status = order_status;

        Console.WriteLine("Order Details updated successfully!");
    } 

    //To cancel order
    public void CancelOrder()
    {
        this.order_status = "Cancelled";
        Console.WriteLine($"Order {order_id} has been cancelled.");
    }



}